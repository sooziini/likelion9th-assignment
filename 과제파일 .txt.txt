OT
웹서비스가 무엇인가
웹 서버를 만드는 방법
HTML1
HTML2
Bootstrap
Github을 통한 배포
CSS 핵심만 골라듣기
1
당부
개발에 재미를 붙여라!
주체적인 학습을 해라!
수료 목적 -> 개발자체에 흥미 저하
만들어 나가는 재미를 느껴라!
-> 마음의 여유, 주체적인 학습, 쫒기지 말아라!
코드라이언 잘 이용하기! or 멘토링 이용!
백문이불여일타!
100번 보는것보다 1번 쳐보는게 더 유용

Web & Web Service
웹서비스 하면 떠오르는 기업 -> 트위터 구글 인스타그램 등등
우리는 웹서비스로부터 원하는 것을 얻는다. 
ex) 구글에 멋쟁이사자처럼에 대해 검색해본다.
즉 웹서비스에 필요한 정보를 요청 -> 웹서비스는 응답해줌
식당과 비슷 -> 우리는 식당에 요청하고 직원은 우리에게 서빙해줌
서빙 : serve + ing 
                            Request(요청)
클라이언트 (client)    -- >  서버 (server)
                              <--
                            Response(응답) 

웹서비스를 만든다 = server를 만든다

Request(요청) 의 종류
1. 갖다 줘 = GET
2. 처리해 줘 = POST
뭘 갖다주고 뭘 처리함? HTML!

ex) 나는 네이버를 켜고
=GET (네이버 갖다줘)
 웹툰을 본 다음
=GET (서버야 웹툰 갖다줘)
 재미있다고 댓글을 달았다.
=POST (내 댓글좀 처리해줘)

P2P -> Peer To Peer
         친구에서 친구로
모두가 서버이자 모두가 클라이언트

Web Service
WWW = World Wide Web의 약자
              세상 넓은 거미줄? -> 인터넷!
크롬, 파이어폭스, 인터넷 익스플로저 등등 은 웹 브라우저
웹브라우저는 다른 서버와 연결해주는 통로라고 생각하면 된다!

정리
1. Client - Server (<-> P2P)
2. Request(~해줘) - Response(그래)
3. 그 때 오가는 문서 (HTML)
4. WWW와 인터넷
5. 웹 브라우저

2. 웹 서버를 만드는 법
서버 컴퓨터? 신경 써야 할 부분만 확실히 신경 쓴 컴퓨터!
어떠한 부분에 신경을 썼을까? 
1. 빠른 컴퓨팅 능력
2. 24시간 무한 루프
3. 발열 냉각장치
4. 클라이언트 수 고려
5. 보안 
서버가 되기 위한 두 가지 방법
1. 내 컴퓨터 = 서버 컴퓨터화시키기
웹서버 SW : Apache Microsoft IIS
2. 이 세상 어딘가의 서버컴퓨터 빌리기
웹 호스팅 업체 : Cloud9 Github

1.로컬 환경 세팅
1) 설치 다소 까다로움
2) 추가적인 지식 요구
3) 한번 익히면 자유로운 개발 가능
2.웹 호스팅 업체 이용
1) 설치와 조작이 단순
2) 과금발생
3) 개발에 있어 제약 존재
4) 클라이언트 수를 고려하지 않아도 됨

GitHub

정리
1. About 서버 컴퓨터
1) 빠른 컴퓨팅 능력
2) 24시간 무한루프
3) 냉각장치
4) 클라이언트 수 고려
5) 보안 중요

2. 서버 프로그램을 만드는 두 가지 방법
1. 내 컴퓨터를 서버컴퓨터화 시키기 (로컬환경세팅)
(아파치, IIS)
2. 이 세상 어딘가의 서버 컴퓨터 인터넷으로 빌리기 (웹호스팅)
(GitHub, AWS,C9) 

HTML - 1
클라이언트 서버 간 이동하는 파일 = HTML
HTML
이해가 쉬움
정형화된 문법
쓰이는 문법만 맨날 쓰임

HTML이란 = Hyper Text Markup Language
특별한 문서이다.
Hyper Text = Link
Markup Language = 컴퓨터가 알아들을 수 있는 언어

마카 = HTML 코드
1. 글
2. 글을 감싸는 틀 -> 태그
3. 틀에 붙는 부가설명 -> 속성
태그의 종류를 나열하듯 외우며 공부 X
문법형식과 동작방식에 집중!

www.codecademy.com 해보기!

HTML 대원칙
HTML로 꾸미려 들지 말자
HTML은 꾸미는 언어가 아님.
꾸미는 언어는 CSS

HTML코드
1. HTML로 작성된 문서라는 것을 알려주는 태그
2. 직접 화면에 등장하진 않지만 문서를 설명하는 태그
3. 직접적으로 화면에 등장하는, 문서에서 보이는 태그

github : 3+1가지의 기능
1. code 저장 기능
2. undo 기능
3. 협업기능
+ web hosting 기능

git init 관리프로젝트 지정
git add 스테이지 에리어에 올리기 위하여
git commit-m"message" 
git remote add[remote 이름][repository주소]
git push[remote 이름][branch 이름]